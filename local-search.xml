<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>腾讯云COS+PicGo搭建图床</title>
    <link href="/2022/10/11/Tencent-cos-img-bed/"/>
    <url>/2022/10/11/Tencent-cos-img-bed/</url>
    
    <content type="html"><![CDATA[<h1 id="腾讯云COS"><a href="#腾讯云COS" class="headerlink" title="腾讯云COS"></a>腾讯云COS</h1><p>腾讯云COS是对象存储服务，使用它的原因是在折腾完各种博客之后发现gitpages的劣势就是加载图片太慢（之前使用github+j作为图床），现在正好尝试cos。新人可以一元一年，流量基本用不完。</p><h2 id="购买使用COS"><a href="#购买使用COS" class="headerlink" title="购买使用COS"></a>购买使用COS</h2><p>官方地址点这里<a href="https://cloud.tencent.com/product/cos">对象存储COS</a></p><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111607382.webp" style="zoom: 50%;" /><p>购买完资源包后。进入控制台-对象存储</p><ul><li>开始创建存储桶</li></ul><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111609370.webp" style="zoom:80%;" /><blockquote><p>名称自己设定，访问权限改为<strong>公有读私有写</strong>，后面的基本保持默认即可</p></blockquote><ul><li><p>返回存储桶界面，进入密匙管理，新建密钥</p><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111612045.webp"  /></li></ul><p>记录下<code>SecretID, SecretKey, APPID</code>等信息，并注意保密。</p><h2 id="安装使用PicGo"><a href="#安装使用PicGo" class="headerlink" title="安装使用PicGo"></a>安装使用PicGo</h2><blockquote><p>A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder</p></blockquote><p>github地址：<a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a></p><p>最新版release: <a href="https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0">https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.0</a></p><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111618971.webp" style="zoom:67%;" /><p>选择适合你系统的版本，并安装。</p><h3 id="设置Tencent-COS"><a href="#设置Tencent-COS" class="headerlink" title="设置Tencent COS"></a>设置Tencent COS</h3><blockquote><p>建议安装插件webp，可以以较小的占用空间存教优的图像。</p></blockquote><p><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111621978.webp"></p><ul><li>前五项均为腾讯云固有信息，填入即可</li><li>存储路径为自定义，必须以<code>/</code>，结尾，点击确定并设置为默认图床即可。</li></ul><p>其他使用请参考<a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">官方文档</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Website and Passwall</title>
    <link href="/2022/10/10/Website-and-Passwall/"/>
    <url>/2022/10/10/Website-and-Passwall/</url>
    
    <content type="html"><![CDATA[<h1 id="约定"><a href="#约定" class="headerlink" title="约定"></a>约定</h1><p>这几天又折腾了建站和科学的新方式，也是花费了不少的费用，大约50+20+80+… &#x3D; 200多元。以前也折腾过，但每隔一段时间都要反复折腾，最后还都不稳定。</p><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><ul><li><p>建站折腾了海外VPS+Wordpress，效果尚可，但明显不足就是访问速度不稳定，致命的是可能会被封！</p></li><li><p>又尝试室内机器（服务器）+内网穿透，但想要好的效果都需要money，即公网IP服务器或公司套餐！</p></li></ul><h2 id="PassWall"><a href="#PassWall" class="headerlink" title="PassWall"></a>PassWall</h2><ul><li><p>用了vless+ws+web一段时间，也挺好，就是最近443被封了，后来折腾IP被ban！</p></li><li><p>而后使用了naive，号称完美隐蔽特征（内容+行为），但仍有443随机ban风险！</p></li><li><p>最后试了trojan-go套cdn，优选ip效果尚好，但太麻烦！</p></li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>综上，网站往后就托管到github，以gitpages运行，并做好本地记录。</p><p>pass还是老老实实用机场吧。</p>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Trojan go 记录</title>
    <link href="/2022/10/06/Trojan-Go-Build/"/>
    <url>/2022/10/06/Trojan-Go-Build/</url>
    
    <content type="html"><![CDATA[<p><img src="https://imghome-1302941983.cos.ap-beijing.myqcloud.com/img/202210111545651.webp"></p><h1 id="trojan-go-搭建记录"><a href="#trojan-go-搭建记录" class="headerlink" title="trojan-go 搭建记录"></a>trojan-go 搭建记录</h1><blockquote><p>致谢youtube博主  <a href="https://www.youtube.com/c/%E4%B8%8D%E8%89%AF%E6%9E%97">不良林</a></p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p> VPS重装系统，不要安装任何nginx，acme申请证书会用到</p></blockquote><h2 id="BBR加速"><a href="#BBR加速" class="headerlink" title="BBR加速"></a>BBR加速</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">bash &lt;(curl -Lso- https://git.io/kernel.sh)<br></code></pre></td></tr></table></figure><h3 id="安装trojan-go"><a href="#安装trojan-go" class="headerlink" title="安装trojan-go"></a>安装trojan-go</h3><p>最好在根目录下建个文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir trojan-go<br>cd trojan-go<br></code></pre></td></tr></table></figure><p>这里使用新发布的更新指纹的最新发行版</p><p>致谢原作者 <a href="https://github.com/p4gefau1t/trojan-go">p4gefau1t</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://github.com/gfw-report/trojan-go/releases/download/v0.10.7/trojan-go-linux-amd64.zip<br></code></pre></td></tr></table></figure><p>其他发行版详见连接<a href="https://github.com/gfw-report/trojan-go/releases/tag/v0.10.7"></a><br></p><p>解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">unzip trojan-go-linux-amd64.zip<br></code></pre></td></tr></table></figure><p>可以查看解压后的文件。<br></p><p>准备配置文件,完整版可见<a href="https://p4gefau1t.github.io/trojan-go/basic/full-config/"></a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ./examples &amp;&amp; cp server.json ../<br></code></pre></td></tr></table></figure><p>这里记录下本次使用的配置文件config.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;run_type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;server&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;0.0.0.0&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;local_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">443</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_addr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;192.83.167.78&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;remote_port&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">80</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;log_level&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;log_file&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/root/trojan-go/trojan-go.log&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>        <span class="hljs-string">&quot;pass&quot;</span><br>    <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;ssl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;cert&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/root/trojan-go/server.crt&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;key&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/root/trojan-go/server.key&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;sni&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yours.com&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;fingerprint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Chrome&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;router&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;block&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-string">&quot;geoip:private&quot;</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;geoip&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/share/trojan-go/geoip.dat&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;geosite&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/usr/share/trojan-go/geosite.dat&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;websocket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;enabled&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;/ABDCD&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;hostname&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;yours.com&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br></code></pre></td></tr></table></figure><p>此时基本安装工作完成，需要完善配置文件中的内容</p><h3 id="申请证书cd"><a href="#申请证书cd" class="headerlink" title="申请证书cd"></a>申请证书cd</h3><blockquote><p>申请证书流程可用别的方法</p></blockquote><p>这里使用acme.sh</p><p>安装acme</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">curl https://get.acme.sh | sh<br></code></pre></td></tr></table></figure><p>安装socat</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt install socat<br></code></pre></td></tr></table></figure><p>添加软连接（环境变量)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ln -s  /root/.acme.sh/acme.sh /usr/local/bin/acme.sh<br></code></pre></td></tr></table></figure><p>注册账号(使用自己邮箱)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">acme.sh --register-account -m my@example.com<br></code></pre></td></tr></table></figure><p>开放防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">ufw allow 80<br>ufw allow 443<br></code></pre></td></tr></table></figure><p>申请证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">acme.sh  --issue -d 你的域名  --standalone -k ec-256<br></code></pre></td></tr></table></figure><p>安装证书(根据情况修改路径)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">acme.sh --installcert -d 你的域名 --ecc  --key-file   /root/trojan-go/server.key   --fullchain-file /root/trojan-go/server.crt <br></code></pre></td></tr></table></figure><p><strong>至此，配置文件需要的准备完成</strong>，还需要注意geoip路径</p><p>在&#x2F;root&#x2F;trojan-go目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./trojan-go -config config.json<br></code></pre></td></tr></table></figure><p>将会启动成功</p><h2 id="添加守护进程"><a href="#添加守护进程" class="headerlink" title="添加守护进程"></a>添加守护进程</h2><p>在example下可以发现提供的service文件，根据需要修改</p><p>放入<code>/etc/systemd/system/trojan-go.service</code>   . (根据实际修改文件路径)</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Trojan-Go - An unidentifiable mechanism that helps you bypass GFW<br><span class="hljs-attr">Documentation</span>=https://p4gefau1t.github.io/trojan-go/<br><span class="hljs-attr">After</span>=network.target nss-lookup.target<br><br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">User</span>=root<br><span class="hljs-attr">CapabilityBoundingSet</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">AmbientCapabilities</span>=CAP_NET_ADMIN CAP_NET_BIND_SERVICE<br><span class="hljs-attr">NoNewPrivileges</span>=<span class="hljs-literal">true</span><br><span class="hljs-attr">ExecStart</span>=/usr/bin/trojan-go -config /etc/trojan-go/config.json<br><span class="hljs-attr">Restart</span>=<span class="hljs-literal">on</span>-failure<br><span class="hljs-attr">RestartSec</span>=<span class="hljs-number">10</span>s<br><span class="hljs-attr">LimitNOFILE</span>=infinity<br><br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br><br></code></pre></td></tr></table></figure><p>然后</p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nsis"><span class="hljs-params">system</span>ctl daemon-reload<br><span class="hljs-params">system</span>ctl enable trojan-go.service<br><span class="hljs-params">system</span>ctl start trojan-go.service<br></code></pre></td></tr></table></figure><p>查看运行状态</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima">systemctl <span class="hljs-built_in">status</span> trojan-<span class="hljs-built_in">go</span>.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu2004安装Tight VNC</title>
    <link href="/2022/04/17/Install-Vnc-Server-on-Ubuntu/"/>
    <url>/2022/04/17/Install-Vnc-Server-on-Ubuntu/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu2004-安装Tight-VNC"><a href="#ubuntu2004-安装Tight-VNC" class="headerlink" title="ubuntu2004 安装Tight VNC"></a>ubuntu2004 安装Tight VNC</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt upgrade<br></code></pre></td></tr></table></figure><h2 id="安装别的桌面"><a href="#安装别的桌面" class="headerlink" title="安装别的桌面"></a>安装别的桌面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install xfce4 xfce4-goodies xorg dbus-x11 x11-xserver-utils<br></code></pre></td></tr></table></figure><h2 id="安装vnc"><a href="#安装vnc" class="headerlink" title="安装vnc"></a>安装vnc</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install tigervnc-standalone-server tigervnc-common<br></code></pre></td></tr></table></figure><h2 id="初始运行创建密码"><a href="#初始运行创建密码" class="headerlink" title="初始运行创建密码"></a>初始运行创建密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver<br><br>//中间那个选no<br><br>//如果报错<br>sudo apt install xterm<br>然后运行报错提示的最后一行命令<br></code></pre></td></tr></table></figure><h2 id="停止配置"><a href="#停止配置" class="headerlink" title="停止配置"></a>停止配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vncserver -<span class="hljs-built_in">kill</span> :1 //注意：后面端口号  （5900+x）<br></code></pre></td></tr></table></figure><h2 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.vnc/xstartup<br></code></pre></td></tr></table></figure><p>填入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">unset</span> SESSION_MANAGER<br><span class="hljs-built_in">unset</span> DBUS_SESSION_BUS_ADDRESS<br><span class="hljs-built_in">exec</span> startxfce4 <br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chmod u+x ~<span class="hljs-regexp">/.vnc/</span>xstartup  <span class="hljs-regexp">//</span>权限<br></code></pre></td></tr></table></figure><p>编辑~&#x2F;.vnc&#x2F;config</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">geometry</span><span class="hljs-operator">=</span><span class="hljs-number">1920</span>x1084<br><span class="hljs-attribute">dpi</span><span class="hljs-operator">=</span><span class="hljs-number">96</span><br></code></pre></td></tr></table></figure><h2 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/systemd/system/vncserver@.service<br></code></pre></td></tr></table></figure><p>编辑（记得修改用户名）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Remote desktop service (VNC)<br>After=syslog.target network.target<br><br>[Service]<br>Type=simple<br>User=username<br>PAMName=login<br>PIDFile=/home/%u/.vnc/%H%i.pid<br>ExecStartPre=/bin/sh -c <span class="hljs-string">&#x27;/usr/bin/vncserver -kill :%i &gt; /dev/null 2&gt;&amp;1 || :&#x27;</span><br>ExecStart=/usr/bin/vncserver :%i -geometry 1920x1080 -alwaysshared -<span class="hljs-built_in">fg</span> -localhost no <br>ExecStop=/usr/bin/vncserver -<span class="hljs-built_in">kill</span> :%i<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl daemon-reload<br>sudo systemctl <span class="hljs-built_in">enable</span> vncserver@1.service<br>sudo systemctl start vncserver@1.service<br></code></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status vncserver@1.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu常用命令</title>
    <link href="/2022/04/17/Ubuntu-Tips/"/>
    <url>/2022/04/17/Ubuntu-Tips/</url>
    
    <content type="html"><![CDATA[<h1 id="1-换源"><a href="#1-换源" class="headerlink" title="1 换源"></a>1 换源</h1><p>备份源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> /etc/apt/source.list /etc/apt/source/list.bak<br></code></pre></td></tr></table></figure><p>换源(阿里云网址：<a href="https://developer.aliyun.com/mirror/ubuntu">https://developer.aliyun.com/mirror/ubuntu</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/apt/source.list<br></code></pre></td></tr></table></figure><p>更换为<br>16.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ xenial main<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial main<br><br>deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main<br><br>deb http://mirrors.aliyun.com/ubuntu/ xenial universe<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial universe<br>deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universe<br><br>deb http://mirrors.aliyun.com/ubuntu/ xenial-security main<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main<br>deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe<br>deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe<br><br></code></pre></td></tr></table></figure><p>18.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br><br></code></pre></td></tr></table></figure><p>20.04</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br><br></code></pre></td></tr></table></figure><p>更新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update &amp;&amp; sudo apt upgrade<br></code></pre></td></tr></table></figure><h1 id="2-创建桌面自启程序"><a href="#2-创建桌面自启程序" class="headerlink" title="2 创建桌面自启程序"></a>2 创建桌面自启程序</h1><h1 id="3-Ubuntu设置静态IP"><a href="#3-Ubuntu设置静态IP" class="headerlink" title="3 Ubuntu设置静态IP"></a>3 Ubuntu设置静态IP</h1><p>安装net-tools</p><p>查看网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ifconfig<br></code></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xxx<br></code></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo nano /etc/netplan/00-installer-config.yaml<br></code></pre></td></tr></table></figure><p>写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">network:<br>  ethernets:<br>    ens160:     <span class="hljs-comment">#配置的网卡的名称</span><br>      addresses: [192.168.0.105/24]    <span class="hljs-comment">#配置的静态ip地址和掩码</span><br>      dhcp4: no    <span class="hljs-comment">#关闭DHCP，如果需要打开DHCP则写yes</span><br>      optional: <span class="hljs-literal">true</span><br>      gateway4: 192.168.0.1    <span class="hljs-comment">#网关地址</span><br>      nameservers:<br>         addresses: [114.114.114.114,180.76.76.76]    <span class="hljs-comment">#DNS服务器地址，多个DNS服务器地址需要用英文逗号分隔开</span><br>  version: 2<br>  renderer: networkd    <span class="hljs-comment">#指定后端采用systemd-networkd或者Network Manager，可不填写则默认使用systemd-workd</span><br></code></pre></td></tr></table></figure><p>应用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo netplan apply<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Paddle基础</title>
    <link href="/2022/01/22/paddle-basics/"/>
    <url>/2022/01/22/paddle-basics/</url>
    
    <content type="html"><![CDATA[<h1 id="0-安装与检查"><a href="#0-安装与检查" class="headerlink" title="0 安装与检查"></a>0 安装与检查</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import paddle<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(paddle.__vision__)</span></span><br></code></pre></td></tr></table></figure><h1 id="1-数据集定义与加载"><a href="#1-数据集定义与加载" class="headerlink" title="1 数据集定义与加载"></a>1 数据集定义与加载</h1><h2 id="1-1-自定义数据集"><a href="#1-1-自定义数据集" class="headerlink" title="1.1 自定义数据集"></a>1.1 自定义数据集</h2><p><strong>paddle.io.Dataset</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> paddle<br><span class="hljs-keyword">from</span> paddle.io <span class="hljs-keyword">import</span> Dataset<br><br>BATCH_SIZE = <span class="hljs-number">64</span><br>BATCH_NUM = <span class="hljs-number">10</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyDataset</span>(<span class="hljs-title class_ inherited__">Dataset</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    步骤一：继承paddle.io.Dataset类</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, num_samples</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        步骤二：实现构造函数，定义数据集大小</span><br><span class="hljs-string">        &quot;&quot;&quot;</span>     <br>        <br>        <span class="hljs-built_in">super</span>(MyDataset, self).__init__()<br>        self.num_samples = num_samples<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        步骤三：实现__getitem__方法，定义指定index时如何获取数据，并返回单条数据（训练数据，对应的标签）</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        data = paddle.uniform(IMAGE_SIZE, dtype=<span class="hljs-string">&#x27;float32&#x27;</span>)<br>        label = paddle.randint(<span class="hljs-number">0</span>, CLASS_NUM-<span class="hljs-number">1</span>, dtype=<span class="hljs-string">&#x27;int64&#x27;</span>)<br><br>        <span class="hljs-keyword">return</span> data, label<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">        步骤四：实现__len__方法，返回数据集总数目</span><br><span class="hljs-string">        &quot;&quot;&quot;</span><br>        <span class="hljs-keyword">return</span> self.num_samples<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Deeplearning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>paddlepaddle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenCV数据结构与基本绘图</title>
    <link href="/2021/03/22/opencv-data-structure-and-basic-drawing/"/>
    <url>/2021/03/22/opencv-data-structure-and-basic-drawing/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Mat-基础图像容器"><a href="#1-Mat-基础图像容器" class="headerlink" title="1.Mat-基础图像容器"></a>1.Mat-基础图像容器</h1><h2 id="1-1-Mat结构使用"><a href="#1-1-Mat结构使用" class="headerlink" title="1.1 Mat结构使用"></a>1.1 Mat结构使用</h2><p>Mat是一个类，有两个数据部分组成：矩阵图（含矩阵尺寸、存储方法、存储地址等信息）和一个指向存储所有像素的指针。</p><h2 id="1-2显式创建Mat对象的七种方法"><a href="#1-2显式创建Mat对象的七种方法" class="headerlink" title="1.2显式创建Mat对象的七种方法"></a>1.2显式创建Mat对象的七种方法</h2><blockquote><p>书中列举了7种，此处记录一种</p></blockquote><p><strong>使用Mat()构造函数</strong></p><p>例</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Mat</span> M(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,CV_8UC3,Scalar(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">255</span>))<br></code></pre></td></tr></table></figure><p>参数：<br>行数、列数、存储元素的数据类型以及每个矩阵点的通道数</p><h1 id="2-常用数据结构和函数"><a href="#2-常用数据结构和函数" class="headerlink" title="2.常用数据结构和函数"></a>2.常用数据结构和函数</h1><h2 id="2-1-Point类"><a href="#2-1-Point类" class="headerlink" title="2.1 Point类"></a>2.1 Point类</h2><p>用法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c++">Point point；<br>point.x = <span class="hljs-number">10</span>;<br>point.y = <span class="hljs-number">8</span>;<br></code></pre></td></tr></table></figure><p>或者</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">Point point = <span class="hljs-built_in">Point</span>(<span class="hljs-number">10</span>,<span class="hljs-number">8</span>);<br></code></pre></td></tr></table></figure><h2 id="2-2-Scalar类"><a href="#2-2-Scalar类" class="headerlink" title="2.2  Scalar类"></a>2.2  Scalar类</h2><p>Scalar表示具有四个元素的数组，被大量用于传递像素值，一般用三个参数，第四个不用可以不写。<br>参数表达式：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">Scalar</span>(a,b,c)<br></code></pre></td></tr></table></figure><p>表示，定义的RGB颜色值：红色分量为c，绿色分量为b，蓝色分量为a。</p><h2 id="2-3-Size类"><a href="#2-3-Size类" class="headerlink" title="2.3 Size类"></a>2.3 Size类</h2><p>使用频率最高的是下面这个构造函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">Size_</span>(_Tp _width, _Tp _height);<br></code></pre></td></tr></table></figure><p>另外代码末尾定义了模板类型的高度和宽度：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">_Tp width,height; <span class="hljs-comment">//宽度和高度</span><br></code></pre></td></tr></table></figure><p>可以用xxx.width ,xxx.height 分别表示xxx的宽度和高度</p><p>例：   </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">Size</span>(<span class="hljs-number">5</span>,<span class="hljs-number">5</span>);<span class="hljs-comment">//构造出的Size宽度和高度都为5，即xxx.width ,xxx.height 均为5</span><br></code></pre></td></tr></table></figure><h2 id="2-4-矩形的表示：Rect类"><a href="#2-4-矩形的表示：Rect类" class="headerlink" title="2.4 矩形的表示：Rect类"></a>2.4 矩形的表示：Rect类</h2><ul><li>Rect类的成员变量有x,y,width,height,分别为矩形左上角的点坐标，和矩形的宽度和高度。      </li><li>常用的成员函数有：<br> <strong>Size()</strong>  返回值为Size；<br> <strong>area()</strong>  返回矩形的面积；<br> <strong>contains(Point)</strong>  判断点是否在矩形内；<br> <strong>inside(Rect)</strong> 判断矩形是否在矩形内；<br> <strong>tl()</strong>  返回左上点坐标；<br> <strong>br()</strong>  返回右下点坐标；</li><li>求矩阵交集与并集： <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">Rect rect = rect1 &amp; rect2;<br>Rect rect = rect1 | rect2;<br></code></pre></td></tr></table></figure></li><li>矩阵的平移和缩放：<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++">Rect rectShift = rect + point;<br>Rect rectScale = rect + size;<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-5-颜色转变空间：cvtColor-函数"><a href="#2-5-颜色转变空间：cvtColor-函数" class="headerlink" title="2.5 颜色转变空间：cvtColor()函数"></a>2.5 颜色转变空间：cvtColor()函数</h2><blockquote><p>作用:实现RBG\HSV\HSI等颜色空间的转换，也可装换为灰度图像</p></blockquote><p>原型</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">cvtColor</span><span class="hljs-params">(InpuyArray src, OutputArray dst, <span class="hljs-type">int</span> code, <span class="hljs-type">int</span> dstCn=<span class="hljs-number">0</span>)</span></span><br></code></pre></td></tr></table></figure><p>第一个参数为输入图像，第二个参数为输出图像，第三个参数为颜色空间转换的标识符，第四个为目标图像的通道数，0表示取原图像通道数。   </p><p>示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">cvtColor</span>(srcImage,dstImage,COLOR_GRAY2BGR);<br></code></pre></td></tr></table></figure><p>第三个参数具体查表。</p><h1 id="3-基本图形的绘制（以下函数需要自定义，暂不阐述）"><a href="#3-基本图形的绘制（以下函数需要自定义，暂不阐述）" class="headerlink" title="3.基本图形的绘制（以下函数需要自定义，暂不阐述）"></a>3.基本图形的绘制（以下函数需要自定义，暂不阐述）</h1><h2 id="3-1-DrawEllipse-函数"><a href="#3-1-DrawEllipse-函数" class="headerlink" title="3.1 DrawEllipse() 函数"></a><del>3.1 DrawEllipse() 函数</del></h2><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">void <span class="hljs-constructor">DrawLine(Mat <span class="hljs-params">img</span>, <span class="hljs-params">double</span> <span class="hljs-params">angle</span>)</span> <span class="hljs-comment">//绘制不同角度、相同尺寸的椭圆</span><br></code></pre></td></tr></table></figure><p><del>其中，函数定义内部使用了WINDOW_WIDTH,这是定义窗口大小的宏   与之相关的</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-built_in">Point</span>(WINDOW_WIDTH/<span class="hljs-number">2</span> ,WINDOW_WIDTH/<span class="hljs-number">2</span>)<span class="hljs-comment">//中心</span><br><span class="hljs-built_in">Size</span>(WINDOW_WIDTH/<span class="hljs-number">4</span>, WINDOW_WIDTH/<span class="hljs-number">16</span>) <span class="hljs-comment">//外矩形框</span><br></code></pre></td></tr></table></figure><h2 id="3-2DrawFilledCircle"><a href="#3-2DrawFilledCircle" class="headerlink" title="3.2DrawFilledCircle()"></a><del>3.2DrawFilledCircle()</del></h2>]]></content>
    
    
    <categories>
      
      <category>CV</category>
      
    </categories>
    
    
    <tags>
      
      <tag>opencv</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>First Blog</title>
    <link href="/2020/04/10/welcome-to-my-blog/"/>
    <url>/2020/04/10/welcome-to-my-blog/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>博客设计采用<code>jekyll</code>框架，<code>chripy</code> 主题，博客完整框架托管到<code>Github</code>上， 发布页位于<code>gh-pages</code>分支。环境系统为<code>Win11-wsl2-ubuntu1804</code>, 安装完本地环境后拉取仓库即可，方便长时间使用。之前使用过<code>hexo</code>框架，但本地文件丢失后如果不可以备份文件会造成数据丢失，不便于修复，严重的会使<code>Markdown</code>文件丢失，因为<code>Github</code>上托管的文件全部是解析后的文件。这样也有好处：自己的文章源文件不会暴露出来，本方式则会暴露出来，某种意义来讲也是不太好，但已经本着公开的态度，便忽视这些。</p><blockquote><p>完整的搭建记录会在下一篇博客推出，方便共享与日后维护。</p></blockquote><h2 id="目录划分"><a href="#目录划分" class="headerlink" title="目录划分"></a>目录划分</h2><p>文章分类通过两种方式：<em><strong>类别</strong></em>与 <em><strong>标签</strong></em></p><p><strong>类别：</strong></p><ul><li>CV</li><li>Deeplearning</li><li>Linux</li><li>Tips</li><li>Somewriting</li><li>Tutorial</li><li>Course</li><li>Program<blockquote><p>类别名称首字母均采用大写</p></blockquote></li></ul><p><strong>标签：</strong></p><ul><li>opencv</li><li>pytorch</li><li>paddlepaddle</li><li>ubuntu</li><li>robomaster</li><li>raspiberry<blockquote><p>标签名称不允许使用大写字母<br>…</p></blockquote></li></ul><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><h3 id="md文件名"><a href="#md文件名" class="headerlink" title="md文件名"></a>md文件名</h3><p>全部采用英文<br><code>YEAR-MON-DAY-NAME.md</code><br>年份为四位，月日分别为两位，NAME为英文，若为中文则需翻译为英文，具体名字体现在文章<code>Head</code>的<code>title</code>里。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
